#!/bin/bash

CONFIG = .env
include ${CONFIG}

UID = $(shell id -u)

help: ## Show this help message
	@echo 'usage: make [target]'
	@echo
	@echo 'targets:'
	@egrep '^(.+)\:\ ##\ (.+)' ${MAKEFILE_LIST} | column -t -c 2 -s ':#'

build: ## (Re)Builds the Settler container
	U_ID=${UID} docker-compose build

run: ## Starts the Settler container
#	docker network create envlabel-api-network || true
	U_ID=${UID} docker-compose up -d

stop: ## Stops the Settler container
	U_ID=${UID} docker-compose stop

terminate: ## Stops the Settler container (with --remove-orphans option set)
	U_ID=${UID} docker-compose down --remove-orphans -v

restart: ## Restarts the Settler container
	$(MAKE) stop && $(MAKE) run

code-style: ## Runs php-cs to fix code styling following Symfony rules
	U_ID=${UID} docker exec -it -u ${UID} $(DOCKER_PHP) php-cs-fixer fix src --rules=@Symfony
	U_ID=${UID} docker exec -it -u ${UID} $(DOCKER_PHP) php-cs-fixer fix tests --rules=@Symfony

#--> Backend commands
ssh-php: ## SSHs into the Settler container as unprivileged user
	U_ID=${UID} docker exec -it -u ${UID} $(DOCKER_PHP) bash

ssh-php-root: ## SSHs into the Settler container as root
	U_ID=${UID} docker exec -it -u root $(DOCKER_PHP) bash

app-logs-dev: ## Tails the Symfony dev log
	U_ID=${UID} docker exec -it -u ${UID} $(DOCKER_PHP) tail -f app/var/log/dev.log

app-logs-prod: ## Tails the Symfony prod log
	U_ID=${UID} docker exec -it -u ${UID} $(DOCKER_PHP) tail -f app/var/log/prod.log

restart-supervisord: ## (Re)Starts supervisord
	U_ID=${UID} docker exec -it -u root $(DOCKER_PHP) /etc/init.d/supervisor stop
	U_ID=${UID} docker exec -it -u root $(DOCKER_PHP) /etc/init.d/supervisor start
	U_ID=${UID} docker exec -it -u root $(DOCKER_PHP) /etc/init.d/supervisor status

update-worker: ## Prepares supervisord due to manage Symfony worker
	U_ID=${UID} docker exec -it -u root $(DOCKER_PHP) supervisorctl update

run-worker: ## Runs Symfony worker via supervisord
	U_ID=${UID} docker exec -it -u root $(DOCKER_PHP) supervisorctl start csv-message-consume:*

worker-status: ## Shows the supervisord managed Symfony worker status
	U_ID=${UID} docker exec -it -u root $(DOCKER_PHP) supervisorctl status
#<-- End backend commands

#--> Docker specific commands
docker-log-php: ## Tails the Settler container Docker log
	docker logs --follow $(DOCKER_PHP)
#<-- Docker specific commands
